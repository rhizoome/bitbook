name: Deploy mdBook site to Pages

on:
  push:
    branches: ["main"]

  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      MDBOOK_VERSION: 0.4.43
    steps:
      - uses: actions/checkout@v4

      # Cache Cargo dependencies and the mdBook binary
      - name: Cache mdBook dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/
            ~/.rustup
          key: mdbook-${{ env.MDBOOK_VERSION }}-${{ runner.os }}

      # Install mdBook if it's not cached
      - name: Install mdBook
        run: |
          source $HOME/.cargo/env || true
          if ! command -v mdbook &> /dev/null || [[ $(mdbook --version) != "mdBook ${MDBOOK_VERSION}" ]]; then
            curl --proto '=https' --tlsv1.2 https://sh.rustup.rs -sSf -y | sh
            rustup update
            cargo install --version ${MDBOOK_VERSION} mdbook
            rm -rf ~/.cargo/registry
            rm -rf ~/.cargo/git
          else
            echo "mdBook is already cached."
          fi

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build with mdBook
        run: |
          mdbook --version
          mdbook build
          find book

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./book

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
